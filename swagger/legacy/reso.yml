openapi: 3.0.0
info:
  title: Airlock
  description: Keycard and Access Control Management
  contact:
    name: Cosmos Team
    url: 'https://wework.slack.com/messages/C0EACDQFN'
    email: digital-cosmos-eng@wework.com
  version: 1.0.0
servers:
  - url: 'https://airlock.wework.com'
    description: Production server
  - url: 'https://airlock-staging.wework.com'
    description: Staging server
  - url: 'http://localhost:4001'
    description: Development server
security:
  - JWT: []
tags:
  - name: Access Levels
    description: Access Levels
  - name: Keycards
    description: Keycards
  - name: NH Access Levels
    description: Naked Hub access level management
  - name: NH Doors
    description: Naked Hub door management
  - name: Partitions
    description: One to one relationship with location (ish)
  - name: Servers
    description: One to one relationship with S2 controllers
  - name: Users
    description: Users
  - name: Workers
    description: Background workers
paths:
  /api/v1/servers:
    summary: Server Collection
    get:
      tags:
        - Servers
      summary: Get Servers
      operationId: getServers
      security:
        - JWT: []
        - apiToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - success
                      - version
                      - httpStatus
                    properties:
                      success:
                        type: boolean
                      version:
                        type: string
                      httpStatus:
                        type: integer
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - name
                        - id
                        - partitions
                      properties:
                        name:
                          type: string
                          description: Server name
                          example: West Coast Server
                        id:
                          type: integer
                        partitions:
                          type: array
                          items:
                            $ref: '#/paths/~1api~1v1~1partitions/get/responses/200/content/application~1json/schema/properties/result'
                            x-miro: tmp/airlock/docs/components/responses/partition.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - error
                      - message
                    properties:
                      error:
                        type: string
                      message:
                        type: string
                      trace:
                        type: array
                        items:
                          type: string
  /api/v1/partitions:
    summary: Partition Collection
    get:
      tags:
        - Partitions
      summary: Get Partition
      operationId: getPartitionByBuildingUuid
      security:
        - JWT: []
        - apiToken: []
      parameters:
        - name: partition_type
          in: query
          description: Partition Type
          required: false
          schema:
            type: string
            default: wework
        - name: building_uuid
          in: query
          description: Building UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - name
                      - id
                      - building_uuid
                      - partition_type
                      - s2_id
                    properties:
                      name:
                        type: string
                        description: 'Partition name, a combination of location code and location name.'
                        example: SHA01 - Yanping Lu
                      id:
                        type: integer
                        description: ID in Airlock
                        example: 1
                      building_uuid:
                        type: string
                        format: uuid
                        description: Building UUID
                        example: e37382c8-8e20-4fed-a136-12999f37146b
                      partition_type:
                        type: string
                        description: 'wework stands for WeWork locations, nakedhub stands for legacy nakedHub locations/'
                        enum:
                          - wework
                          - nakedhub
                        example: wework
                      s2_id:
                        type: integer
                        description: 'For an S2 partition, it refers to the ID in S2; For a Yasasafe partition, it is just a hard-coded integer.'
                        example: 1
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/access_levels:
    summary: Access Level Collection
    get:
      tags:
        - Access Levels
      summary: Filter Access Levels
      description: Filter access levels by partition uuids
      operationId: filterAccessLevelsByPartitionUuids
      parameters:
        - name: partition_ids
          in: query
          description: one of partition_ids or partition_id is required
          required: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        - name: partition_id
          in: query
          description: one of partition_ids or partition_id is required
          required: true
          schema:
            type: integer
        - name: user_uuid
          in: query
          description: |
            filters access levels based on membership(s) returned from Interstellar
          required: false
          schema:
            type: string
            format: uuid
        - name: filter_for_members
          in: query
          description: |
            filters out access levels that have non whitelisted keywords i.e. IT closet
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: array
                    items:
                      $ref: '#/paths/~1api~1v1~1access_levels/post/responses/200/content/application~1json/schema/properties/result'
                      x-miro: tmp/airlock/docs/components/responses/access_level.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
    post:
      tags:
        - Access Levels
      summary: Create Access Level
      operationId: createAccessLevel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - partition_id
                - reader_group_key
                - time_spec_key
              properties:
                name:
                  type: string
                partition_id:
                  type: integer
                reader_group_key:
                  type: string
                time_spec_key:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - name
                      - id
                      - s2_id
                      - access_level_type
                      - partition_id
                      - partition
                      - access_groups
                    properties:
                      name:
                        type: string
                      id:
                        type: integer
                      s2_id:
                        type: integer
                      access_level_type:
                        type: string
                        enum:
                          - office
                          - other
                      partition_id:
                        type: integer
                      partition:
                        $ref: '#/paths/~1api~1v1~1partitions/get/responses/200/content/application~1json/schema/properties/result'
                        x-miro: tmp/airlock/docs/components/responses/partition.yml
                      access_groups:
                        type: array
                        items:
                          type: object
                          required:
                            - name
                          properties:
                            name:
                              type: string
                            description:
                              type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
  '/api/v1/access_levels/{id}':
    summary: Access Level Resource
    put:
      tags:
        - Access Levels
      summary: Update Access Level
      operationId: updateAccessLevel
      parameters:
        - name: id
          in: path
          description: Access Level ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    $ref: '#/paths/~1api~1v1~1access_levels/post/responses/200/content/application~1json/schema/properties/result'
                    x-miro: tmp/airlock/docs/components/responses/access_level.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
    delete:
      tags:
        - Access Levels
      summary: Delete Access Level
      operationId: deleteAccessLevel
      parameters:
        - name: id
          in: path
          description: Access Level ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    default: {}
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
  '/api/v1/access_levels/{id}/users':
    summary: Users With Access Level
    get:
      tags:
        - Access Levels
      summary: Get Users
      operationId: getUsersWithAccessLevel
      parameters:
        - name: id
          in: path
          description: Access Level ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - users
                    properties:
                      users:
                        type: array
                        items:
                          type: object
                          required:
                            - name
                            - uuid
                            - email
                          properties:
                            name:
                              type: string
                            uuid:
                              type: string
                              format: uuid
                            email:
                              type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/access_levels/access_levels_check:
    summary: Access Levels Check
    get:
      tags:
        - Access Levels
      summary: Access Levels Check
      description: Check for valid and missing access levels by partition
      operationId: checkAccessLevelsByPartition
      parameters:
        - name: partition_type
          in: query
          description: Partition Type
          required: false
          schema:
            type: string
            default: wework
        - name: building_uuid
          in: query
          description: Building UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - access_levels
                      - partition_id
                    properties:
                      access_levels:
                        type: object
                        required:
                          - extraneous_accesses
                          - office_accesses
                        properties:
                          extraneous_accesses:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                                - id
                                - s2_id
                                - access_assignment_count
                              properties:
                                name:
                                  type: string
                                id:
                                  type: integer
                                s2_id:
                                  type: integer
                                access_assignment_count:
                                  type: integer
                          office_accesses:
                            type: array
                            items:
                              type: object
                              required:
                                - office_name
                                - partition_id
                                - status
                                - s2_access_level
                                - correct_access_level_name
                                - id
                                - s2_id
                                - access_assignment_count
                              properties:
                                office_name:
                                  type: string
                                partition_id:
                                  type: integer
                                status:
                                  type: string
                                  enum:
                                    - correct
                                    - misnamed
                                s2_access_level:
                                  type: string
                                correct_access_level_name:
                                  type: string
                                id:
                                  type: integer
                                s2_id:
                                  type: integer
                                access_assignment_count:
                                  type: integer
                      partition_id:
                        type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/access_levels/reader_groups:
    summary: Reader Groups
    get:
      tags:
        - Access Levels
      summary: Get Reader Groups
      operationId: getReaderGroups
      parameters:
        - name: partition_type
          in: query
          description: Partition Type
          required: false
          schema:
            type: string
            default: wework
        - name: building_uuid
          in: query
          description: Building UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - reader_groups
                    properties:
                      reader_groups:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: string
                            name:
                              type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/access_levels/time_spec_groups:
    summary: Time Spec Groups
    get:
      tags:
        - Access Levels
      summary: Get Time Spec Groups
      operationId: getTimeSpecGroups
      parameters:
        - name: partition_type
          in: query
          description: Partition Type
          required: false
          schema:
            type: string
            default: wework
        - name: building_uuid
          in: query
          description: Building UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - time_spec_groups
                    properties:
                      time_spec_groups:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: string
                            name:
                              type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/access_levels/types:
    summary: Access Level Types
    get:
      tags:
        - Access Levels
      summary: Get Types
      description: Get access level types
      operationId: getAccessLevelTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - types
                    properties:
                      types:
                        type: array
                        items:
                          type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/keycards:
    summary: Keycard Collection
    get:
      tags:
        - Keycards
      summary: Get Keycard
      description: Search for keycards and users by hotstamp
      operationId: getKeycardByHotstamp
      parameters:
        - name: hotstamp
          in: query
          description: Hotstamp
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - hotstamp
                        - card_format
                        - user
                      properties:
                        id:
                          type: integer
                        hotstamp:
                          type: string
                        card_format:
                          type: string
                        user:
                          type: object
                          required:
                            - id
                            - email
                            - uuid
                            - name
                            - created_at
                            - updated_at
                            - date_of_birth
                            - kind
                            - s2_profile_id
                            - location_uuid
                          properties:
                            id:
                              type: integer
                            email:
                              type: string
                            uuid:
                              type: string
                              format: uuid
                            name:
                              type: string
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                            date_of_birth:
                              type: string
                              format: date
                            kind:
                              type: string
                            s2_profile_id:
                              type: string
                            location_uuid:
                              type: string
                              format: uuid
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  '/api/v1/users/{id}':
    summary: User Resource
    get:
      tags:
        - Users
      summary: Get User
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: User UUID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - name
                      - uuid
                    properties:
                      name:
                        type: string
                      uuid:
                        type: string
                        format: uuid
                      s2_profile_id:
                        type: string
                      keycard_assignments:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - keycard
                          properties:
                            id:
                              type: integer
                            archived_at:
                              type: string
                              format: date-time
                            keycard:
                              type: object
                              required:
                                - id
                                - hotstamp
                                - card_format
                              properties:
                                id:
                                  type: integer
                                hotstamp:
                                  type: string
                                card_format:
                                  type: string
                                secondary_hotstamp:
                                  type: string
                                secondary_card_format:
                                  type: string
                      access_assignment:
                        type: object
                        required:
                          - id
                          - access_levels
                        properties:
                          id:
                            type: integer
                          archived_at:
                            type: string
                            format: date-time
                          access_levels:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                                - id
                                - s2_id
                                - access_level_type
                                - partition_id
                              properties:
                                name:
                                  type: string
                                id:
                                  type: integer
                                s2_id:
                                  type: integer
                                access_level_type:
                                  type: string
                                  enum:
                                    - office
                                    - other
                                partition_id:
                                  type: integer
                      badge_image:
                        type: object
                        required:
                          - s3_url
                        properties:
                          s3_url:
                            type: string
                      access_change_attempt:
                        type: object
                        required:
                          - status
                          - intent
                          - change_type
                        properties:
                          status:
                            type: string
                            enum:
                              - pending
                              - success
                              - error
                              - s2_error
                          error:
                            type: string
                          intent:
                            type: string
                          change_type:
                            type: string
                            enum:
                              - deactivate profile
                              - create keycard
                              - update keycard
                              - update access
                      expiration:
                        type: object
                        required:
                          - expired_at
                        properties:
                          expired_at:
                            type: string
                            format: date-time
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
      security:
        - JWT: []
        - apiToken: []
  '/api/v1/users/{id}/doors':
    summary: Get User Doors
    get:
      tags:
        - Users
      summary: Get User Doors
      description: Get a list of available doors for a user in a location
      operationId: getUserDoors
      parameters:
        - name: id
          in: path
          description: User UUID
          required: true
          schema:
            type: string
            format: uuid
        - name: building_uuid
          in: query
          description: Location UUID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: array
                    items:
                      $ref: '#/paths/~1api~1v1~1nh~1doors~1%7Bvendor_id%7D/put/responses/200/content/application~1json/schema/properties/result'
                      x-miro: tmp/airlock/docs/components/responses/door.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
      security:
        - JWT: []
        - apiToken: []
  /api/v1/workers/keycard_create:
    summary: Create Keycard
    post:
      tags:
        - Workers
      summary: Create Keycard
      description: Enqueue a create keycard job to Sidekiq
      operationId: createKeycard
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - keycards
              properties:
                location_uuid:
                  type: string
                  format: uuid
                picture:
                  type: string
                picture_ext:
                  type: string
                keycards:
                  type: array
                  items:
                    type: object
                    required:
                      - hotstamp
                      - card_format
                    properties:
                      hotstamp:
                        type: string
                      card_format:
                        type: string
                      secondary_hotstamp:
                        type: string
                      secondary_card_format:
                        type: string
                      keycard_assignment_id:
                        type: integer
                access_ids:
                  type: array
                  items:
                    type: integer
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    default: {}
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/workers/keycard_update:
    summary: Update Keycard
    post:
      tags:
        - Workers
      summary: Update Keycard
      description: Enqueue an update keycard job to Sidekiq
      operationId: updateKeycard
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/paths/~1api~1v1~1workers~1keycard_create/post/requestBody/content/application~1json/schema'
                  x-miro: tmp/airlock/docs/components/request_bodies/keycards.yml
                - type: object
                  properties:
                    seat_count:
                      type: integer
                    reservation_params:
                      type: object
                      required:
                        - location_uuid
                        - account_uuid
                        - started_on
                        - quantity
                        - resource_uuid
                        - employee_uuid
                      properties:
                        location_uuid:
                          type: string
                          format: uuid
                        account_uuid:
                          type: string
                          format: uuid
                        started_on:
                          type: string
                          format: date
                        quantity:
                          type: integer
                        notes:
                          type: string
                        resource_uuid:
                          type: string
                          format: uuid
                        waive:
                          type: boolean
                          default: false
                        employee_uuid:
                          type: string
                          format: uuid
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    default: {}
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/workers/deactivate_profile:
    summary: Deactivate Profile
    post:
      tags:
        - Workers
      summary: Deactivate Profile
      description: 'Enqueue a deactivate profile job to Sidekiq; this removes all keycards, access levels and profile info of the member from S2'
      operationId: deactivateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_uuid
              properties:
                user_uuid:
                  type: string
                  format: uuid
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    default: {}
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/workers/keycard_remove_access:
    summary: Keycard Remove Access
    post:
      tags:
        - Workers
      summary: Remove Access
      description: Enqueue a remove access level job to Sidekiq
      operationId: removeAccess
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_uuid
                - access_id
              properties:
                user_uuid:
                  type: string
                  format: uuid
                access_id:
                  type: integer
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    default: {}
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
  /api/v1/nh/access_levels:
    summary: NH Access Level Collection
    get:
      tags:
        - NH Access Levels
      summary: Access Level List
      description: Get a list access levels of one location
      operationId: showNHAccessLevelsByLocationUuid
      security:
        - apiToken: []
      parameters:
        - name: location_uuid
          in: query
          description: Location UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    $ref: '#/paths/~1api~1v1~1access_levels/get/responses/200/content/application~1json/schema/properties/result'
                    x-miro: tmp/airlock/docs/components/responses/access_levels.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
    post:
      tags:
        - NH Access Levels
      summary: Create Access Level
      description: Create an access level for a NH location
      operationId: createNHAccessLevel
      security:
        - apiToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - location_uuid
                - s2_id
              properties:
                name:
                  type: string
                location_uuid:
                  type: string
                  format: uuid
                s2_id:
                  type: integer
                  description: ID in Yasasafe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    $ref: '#/paths/~1api~1v1~1access_levels/post/responses/200/content/application~1json/schema/properties/result'
                    x-miro: tmp/airlock/docs/components/responses/access_level.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
  '/api/v1/nh/access_levels/{id}':
    summary: NH Access Level Resource
    put:
      tags:
        - NH Access Levels
      summary: Update Access Level
      operationId: updateNHAccessLevel
      security:
        - apiToken: []
      parameters:
        - name: id
          in: path
          description: Access Level ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    $ref: '#/paths/~1api~1v1~1access_levels/post/responses/200/content/application~1json/schema/properties/result'
                    x-miro: tmp/airlock/docs/components/responses/access_level.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
    delete:
      tags:
        - NH Access Levels
      summary: Archive Access Level
      operationId: archiveNHAccessLevel
      security:
        - apiToken: []
      parameters:
        - name: id
          in: path
          description: Access Level ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    default: {}
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
  '/api/v1/nh/access_levels/{id}/doors':
    summary: Door Collection
    get:
      tags:
        - NH Access Levels
      summary: Access Level Doors
      description: Show a list of doors of an access level
      operationId: getAccessLevelDoors
      security:
        - apiToken: []
      parameters:
        - name: id
          in: path
          description: Access Level ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    $ref: '#/paths/~1api~1v1~1users~1%7Bid%7D~1doors/get/responses/200/content/application~1json/schema/properties/result'
                    x-miro: tmp/airlock/docs/components/responses/doors.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
  '/api/v1/nh/access_levels/{id}/add_door':
    summary: Create Access Level and Door Association
    post:
      tags:
        - NH Access Levels
      summary: Add Door
      description: Add a door to a access level
      operationId: addDoorToAccessLevel
      security:
        - apiToken: []
      parameters:
        - name: id
          in: path
          description: Access Level ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - door_id
              properties:
                door_id:
                  type: integer
                  description: Door ID in Airlock
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
  '/api/v1/nh/access_levels/{id}/remove_door':
    summary: Destory Access Level and Door Association
    post:
      tags:
        - NH Access Levels
      summary: Remove Door
      description: Remove a door from an access level
      operationId: removeDoorFromAccessLevel
      security:
        - apiToken: []
      parameters:
        - name: id
          in: path
          description: Access Level ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - door_id
              properties:
                door_id:
                  type: integer
                  description: Door ID in Airlock
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
  /api/v1/nh/doors:
    summary: NH Door Collection
    get:
      tags:
        - NH Doors
      summary: Search Doors
      description: Search doors by name
      operationId: searchDoor
      security:
        - apiToken: []
      parameters:
        - name: name_matches
          in: query
          description: Search words
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: array
                    items:
                      $ref: '#/paths/~1api~1v1~1nh~1doors/post/responses/200/content/application~1json/schema/properties/result'
                      x-miro: tmp/airlock/docs/components/responses/door_with_id.yml
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - error
                    properties:
                      error:
                        type: string
                      stack:
                        type: string
                      data:
                        type: array
                        items:
                          type: string
    post:
      tags:
        - NH Doors
      summary: Create Door
      description: Create a Door
      operationId: createDoor
      security:
        - apiToken: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - vendor_id
              properties:
                name:
                  type: string
                vendor_id:
                  type: integer
                  description: Door ID in Yasasafe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - id
                      - vendor_id
                      - name
                    properties:
                      id:
                        type: integer
                        description: Door ID in Airlock
                      vendor_id:
                        type: integer
                        description: Door ID in Yasasafe
                      name:
                        type: string
                        description: Door name
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1nh~1doors/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/json_error.yml
  '/api/v1/nh/doors/{vendor_id}':
    summary: NH Door Resource
    put:
      tags:
        - NH Doors
      summary: Update Door
      description: Update door name
      operationId: updateDoorName
      security:
        - apiToken: []
      parameters:
        - name: vendor_id
          in: path
          description: Door ID in Yasasafe
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/paths/~1api~1v1~1servers/get/responses/200/content/application~1json/schema/properties/meta'
                    x-miro: tmp/airlock/docs/components/responses/meta.yml
                  result:
                    type: object
                    required:
                      - vendor_id
                      - name
                    properties:
                      vendor_id:
                        type: integer
                        description: Door ID in Yasasafe
                      name:
                        type: string
                        description: Door name
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1servers/get/responses/default/content/application~1json/schema'
                x-miro: tmp/airlock/docs/components/responses/error.yml
components:
  securitySchemes:
    JWT:
      type: apiKey
      name: JWT
      in: header
    apiToken:
      type: apiKey
      name: API Token
      in: header
      description: 'Send a We-Util API Token like this: `Token=API_KEY_VALUE`'
