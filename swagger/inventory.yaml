openapi: 3.0.0
info:
  title: China Member Service APIs
  version: v1
  contact:
    name: Mulan Inventory Service
    url: rock.yu@wework.com
  x-log:
    url: https://weconnect.github.io/china-mx-openapi/images/wework_logo.jpg
servers:
  - url: https://api-staging.wework.cn/chinaos/mulanInventoryService
    description: Staging Server
  - url: http://localhost:8080/mulanInventoryService
    description: Local Development Server
tags:
  - name: mulan
  - name: rpc
x-tagGroups:
  - name: API - v1
    tags:
      - mulan
      - rpc
components:
  securitySchemes:
    ChinaAccessToken:
      type: apiKey
      name: Authorization
      in: header
      description: "Send a token like this `X-CAT CHINA_ACCESS_TOKEN_VALUE` in
        Authorization header. You can find the token for staging and development
        here:
        https://github.com/WeConnect/china-member-service/blob/master/user-core\
        /docs/rpc/environment.md"
paths:
  /api/v1/rpc/products:
    get:
      tags:
        - rpc
      description: |
        List product, filter by building uuids, product types, product status
      operationId: products list
      parameters:
        - name: buildingUuid
          in: query
          description: filter by building's uuid
          schema:
            type: string
            format: uuid
        - name: productTypes
          in: query
          description: filter by product types
          schema:
            type: array
            items:
              type: string
              description: product type
              enum:
                - PRIVATE_OFFICE
                - HD
                - DD
        - name: productStatuses
          in: query
          description: filter by product statuses
          schema:
            type: array
            items:
              type: string
              description: product status
              enum:
                - PENDING
                - ON_SALE
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: code
                    example: 0
                    type: integer
                  data:
                    items:
                      properties:
                        buildingName:
                          description: buildingName
                          example: 中海国际
                          type: string
                        buildingUuid:
                          description: buildingUuid
                          example: c1461271-3de7-4334-86f8-33352a4c4766
                          type: string
                        hasWindow:
                          description: hasWindow
                          type: boolean
                        hasInternalRoom:
                          description: hasInternalRoom
                          type: boolean
                        productName:
                          description: productName
                          example: A-101
                          type: string
                        productType:
                          description: productType
                          example: PRIVATE_OFFICE
                          $ref: "#/paths/api/v1/rpc/products/get/parameters/1/schema/items"
                        productUuid:
                          description: productUuid
                          example: 3cb9c78f-b0bc-42db-9dfd-dc2a8997ca1b
                          type: string
                        capacity:
                          description: capacity
                          example: 30
                          type: integer
                      type: object
                    type: array
                  msg:
                    description: msg
                    example: ""
                    type: string
